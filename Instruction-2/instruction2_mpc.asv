clear all, close all, clc

% Predicted states bounds
constr.statelb = [-1;-1]; 
constr.stateub =  [1;1];
% Current state bound 
constr.initialstatelb = -0.5;
constr.initialstateub = 0.5;
% Terminal state bound
constr.terminalstatelb = -3;
constr.terminalstateub = 3;
% Input bounds
constr.inputlb = -2;
constr.inputub =  2;

% Simulation parameters
t = 0:1:300; 
Ts = 0.1;
N = 5; % prediction horizon
x0 = [3;1];

% Model
[A,B,C,D,sys] = modelselect('car2d','discrete',Ts);
[nx,nu] = size(B);
Q = 1*eye(nx);
R = 1*eye(nu);

% Checks
ctrb_M = ctrb(A,B);
if length(x0) ~= length(A)
error('length of initial conditions must be the same as A')
elseif rank(ctrb_M) ~= length(A)
error('Problem is uncontrollable') 
elseif length(Q) ~= nx
error('Q matrix must be same size as number of states') 
elseif length(R) ~= nu
error('R matrix must be same size as number of inputs')
elseif length(constr.statelb) + length(constr.statelb) ~= 4*nx
end

% Precalculated matrices
[Klqr,P,~] = dlqr(A,B,Q,R); % This P is subject to change
[phi,gamma] = phi_gam_predict(A,B,N);
[omega,psi] = get_omega_psi(Q,P,R,N);
G = 2*(psi+(gamma'*omega*gamma));
F = 2*gamma'*omega*phi;
[W,L,c] = getWLc(constr,N,B,gamma,phi);

% Simulation